#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service="jitsi-videobridge2" --action="stop" --log_path="/var/log/jitsi/jvb.log"
ynh_systemctl --service="jicofo" --action="stop" --log_path="/var/log/jitsi/jicofo.log"
ynh_systemctl --service="prosody" --action="stop" --log_path="/var/log/prosody/prosody.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If max_memory doesn't exist, create it and set to default 75 mb value
if [ -z "${max_memory:-}" ]; then
    max_memory=200
    ynh_app_setting_set --app="$app" --key=max_memory --value="$max_memory"
fi

gpasswd --add prosody "$app"
gpasswd --add www-data "$app"

if ynh_app_upgrading_from_version_before 2.0.9823~ynh1
then
	# Remove the service from the list of services known by YunoHost (added from `yunohost service add`)
	if ynh_hide_warnings yunohost service status "$app-videobridge" >/dev/null; then
	    yunohost service remove "$app-videobridge"
	fi
	
	if ynh_hide_warnings yunohost service status "$app-jicofo" >/dev/null; then
	    yunohost service remove "$app-jicofo"
	fi
	
	# Remove the dedicated systemd config
	ynh_config_remove_systemd --service="$app-videobridge"
	ynh_config_remove_systemd --service="$app-jicofo"
	
	# Remove the app-specific logrotate config
	ynh_config_remove_logrotate
	
	# Remove the dedicated NGINX config
	ynh_config_remove_nginx
	
	prosodyctl deluser "$focus_user@auth.$domain" || true
	prosodyctl deluser "$videobridge_user@auth.$domain" || true
	
	# Remove domain conf template
	ynh_safe_rm "/etc/prosody/conf.d/$domain.cfg.lua"
	ynh_safe_rm "/etc/prosody/conf.avail/$domain.cfg.lua"
	ynh_safe_rm "/etc/prosody/certs/$domain.key"
	ynh_safe_rm "/etc/prosody/certs/$domain.crt"
	ynh_safe_rm "/var/lib/prosody/$domain.key"
	ynh_safe_rm "/var/lib/prosody/$domain.crt"
	ynh_safe_rm "/var/lib/prosody/$domain.cnf"
	ynh_safe_rm "/etc/prosody/certs/auth.$domain.key"
	ynh_safe_rm "/etc/prosody/certs/auth.$domain.crt"
	ynh_safe_rm "/var/lib/prosody/auth.$domain.key"
	ynh_safe_rm "/var/lib/prosody/auth.$domain.crt"
	ynh_safe_rm "/var/lib/prosody/auth.$domain.cnf"
	ynh_safe_rm "/usr/local/share/ca-certificates/auth.$domain.crt"
	
	update-ca-certificates -f
	
	gpasswd --delete prosody "$app"
	
	ynh_systemctl --service=prosody --action=restart
	
	ynh_app_setting_delete --app="$app" --key=require_prosody

	#ynh_remove_apps
	
	ynh_safe_rm "/etc/$app"
	ynh_app_setting_set_default --key=enable_ldap --value=true
fi
#=================================================
# INSTALL JITSI
#=================================================

echo jitsi-videobridge2 jitsi-videobridge/jvb-hostname string "$domain"   | debconf-set-selections
echo jitsi-meet-web-config jitsi-meet/cert-choice string "I want to use my own certificate"  | debconf-set-selections
echo jitsi-meet-web-config jitsi-meet/cert-path-key string "/etc/yunohost/certs/$domain/key.pem" | debconf-set-selections
echo jitsi-meet-web-config jitsi-meet/cert-path-crt string "/etc/yunohost/certs/$domain/crt.pem" | debconf-set-selections
echo jitsi-meet-web-config jitsi-meet/jaas-choice select false | debconf-set-selections

ynh_apt_install_dependencies_from_extra_repository --repo="deb https://download.jitsi.org stable/" --package="jitsi-meet prosody-modules" --key="https://download.jitsi.org/jitsi-key.gpg.key"

#=================================================
# LDAP CONFIGURATION
#=================================================

if [ $enable_ldap -eq 1 ]
then
	ynh_script_progression "Configuring LDAP..."
    _enable_ldap
fi

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

ynh_safe_rm "/etc/nginx/sites-enabled/$domain.conf"

ynh_config_add_nginx

yunohost service add "jitsi-videobridge2" --log="/var/log/jitsi/jvb.log" --needs_exposed_ports "$port" "$port_videobridge"

yunohost service add "jicofo" --log="/var/log/jitsi/jicofo.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="prosody" --action="restart" --log_path="/var/log/prosody/prosody.log"
ynh_systemctl --service="jicofo" --action="restart" --log_path="/var/log/jitsi/jicofo.log"
ynh_systemctl --service="jitsi-videobridge2" --action="restart" --log_path="/var/log/jitsi/jvb.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
